-- Criando tabela para demonstrar nonequijoin
CREATE TABLE HR.JOB_GRADES (GRADE_LEVEL VARCHAR2(2), LOWEST_SAL NUMBER, HIGHEST_SAL NUMBER);
/

-- Populando a tabela
INSERT INTO HR.JOB_GRADES (GRADE_LEVEL, LOWEST_SAL, HIGHEST_SAL) VALUES ('A', 0, 1000);
INSERT INTO HR.JOB_GRADES (GRADE_LEVEL, LOWEST_SAL, HIGHEST_SAL) VALUES ('B', 1001, 3000);
INSERT INTO HR.JOB_GRADES (GRADE_LEVEL, LOWEST_SAL, HIGHEST_SAL) VALUES ('C', 3001, 6000);
INSERT INTO HR.JOB_GRADES (GRADE_LEVEL, LOWEST_SAL, HIGHEST_SAL) VALUES ('D', 6001, 9000);
INSERT INTO HR.JOB_GRADES (GRADE_LEVEL, LOWEST_SAL, HIGHEST_SAL) VALUES ('E', 9001, 14000);
INSERT INTO HR.JOB_GRADES (GRADE_LEVEL, LOWEST_SAL, HIGHEST_SAL) VALUES ('F', 14001, 24000);
INSERT INTO HR.JOB_GRADES (GRADE_LEVEL, LOWEST_SAL, HIGHEST_SAL) VALUES ('G', 24001, 50000);
COMMIT;
/

-- recuperando dados e empregados e sua classificacao de salario
SELECT          e.employee_id,
                E.FIRST_NAME || ' ' || E.LAST_NAME EMPLOYEE_NAME,
                E.SALARY,
                J.GRADE_LEVEL                
FROM            HR.EMPLOYEES E
INNER JOIN      HR.JOB_GRADES J
    ON          E.salary BETWEEN J.LOWEST_SAL AND HIGHEST_SAL
ORDER BY        E.SALARY;